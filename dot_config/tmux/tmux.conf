# ----- Config ------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Switching is a little easier when start counting from 1 (sacrileg!)
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed
set -g renumber-windows on

# Better colors
set -g default-terminal "${TERM}"
set -as terminal-features ",*:RGB"
set -ag terminal-overrides ",xterm-256color:RGB"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Mouse mode
set -g mouse on

# tmux can rename window titles
set -g set-titles on

# Display window activity
setw -g monitor-activity on

# Bell settings
# set -g bell-action any
set -g visual-bell off
set -g visual-activity off

# Focus events
set -g focus-events on

# Keep tmux running even if active session is closed / detached
set -g detach-on-destroy off

# Remove vim mode delay
set -s escape-time 0

# Compatibility with yazi
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# ----- Keybindings -------------------------------

# NOTE:
# -r    bind can be repeated without prefix ( _R_epeat)
# -n    bind does not use prefix ( _N_o prefix)

# Prefix
unbind C-b
set -g prefix C-a

# Send prefix down the line so there is always a prefix for the prefix
bind C-a send-prefix

# Reload config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf; display-message "tmux config reloaded"

# More vim like window switching
bind C-p previous-window
bind -r p previous-window
bind C-n next-window
bind -r n next-window

# Quickswitch between the two recently used windows
bind Tab last-window

# Create a new window in the current dir
bind c new-window -c "#{pane_current_path}"

# Kill windows and panes without confirmation
bind-key X kill-window
bind-key x kill-pane

# New session
bind S new-session

# More intuitive split commands
unbind %
bind - split-window -h -c "#{pane_current_path}"
unbind '"'
bind | split-window -v -c "#{pane_current_path}"

# Switch to copy-mode
unbind "'"
bind-key -T prefix "'" copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key -r "f" display-popup -E -w 40% "sesh connect \"$(
  sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --prompt='‚ö°'
)\""

bind-key -r "F" run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 55%,60% \
		--no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
		--header '  ^a all ^t tmux ^g configs ^z zoxide ^x tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
		--bind 'ctrl-z:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-x:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)')\""

# Rename session
bind-key , command-prompt -I "#S" "rename-session '%%'"

# Open Lazygit in a new window from anywhere 
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit"

# Open a program in a new window
bind-key o command-prompt -p "open app: " "new-window '%%'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ----- Plugins -----------------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'


# ----- Status line -------------------------------

# Colors (Carbonfox)
set -g @color-bg "default"
set -g @color-fg "#c0caf5"
set -g @color-highlight "#2ac3de"

set-option -g status-left-length 100
set-option -g status-right-length 100
set-option -g status-left ""
set-option -g status-right " #[bg=#{@color-bg}] #[fg=#{@color-fg}]#{session_name} "

set-option -g status-style "fg=#{@color-fg} bg=default"

set-option -g window-status-format " #{window_index}: #{window_name} "
set-option -g window-status-current-format " #{window_index}: #{window_name} " 
# set-option -g window-status-current-style "fg=#11111b bg=#fab387"
set-option -g window-status-current-style "fg=#{@color-highlight}"
set-option -g window-status-activity-style none


# ----- Always keep this last ---------------------

# Run tpm
run '~/.config/tmux/plugins/tpm/tpm'
